{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build",
            "command": "dotnet",
            "type": "process",
            "args": [
                "build",
                "${workspaceFolder}/svc/external/external.sln",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary;ForceNoAlign"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "publish",
            "command": "dotnet",
            "type": "process",
            "args": [
                "publish",
                "${workspaceFolder}/svc/external/external.sln",
                "/property:GenerateFullPaths=true",
                "/consoleloggerparameters:NoSummary;ForceNoAlign"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "label": "watch",
            "command": "dotnet",
            "type": "process",
            "args": [
                "watch",
                "run",
                "--project",
                "${workspaceFolder}/svc/external/external.sln"
            ],
            "problemMatcher": "$msCompile"
        },
        {
            "type": "docker-build",
            "label": "docker-build: debug",
            "dependsOn": [
                "build"
            ],
            "dockerBuild": {
                "tag": "amlresearch:dev",
                "target": "base",
                "dockerfile": "${workspaceFolder}/svc/external/info.sarins.services.vault/Dockerfile",
                "context": "${workspaceFolder}",
                "pull": true
            },
            "netCore": {
                "appProject": "${workspaceFolder}/svc/external/info.sarins.services.vault/info.sarins.services.vault.csproj"
            }
        },
        {
            "type": "docker-build",
            "label": "docker-build: release",
            "dependsOn": [
                "build"
            ],
            "dockerBuild": {
                "tag": "amlresearch:latest",
                "dockerfile": "${workspaceFolder}/svc/external/info.sarins.services.vault/Dockerfile",
                "context": "${workspaceFolder}",
                "platform": {
                    "os": "linux",
                    "architecture": "amd64"
                },
                "pull": true
            },
            "netCore": {
                "appProject": "${workspaceFolder}/svc/external/info.sarins.services.vault/info.sarins.services.vault.csproj"
            }
        },
        {
            "type": "docker-run",
            "label": "docker-run: debug",
            "dependsOn": [
                "docker-build"
            ],
            "dockerRun": {
                "env": {
                    "DEBUG": "*",
                    "NODE_ENV": "development"
                }
            },
            "node": {
                "package": "${workspaceFolder}/fe/research-ui/package.json",
                "enableDebugging": true
            }
        },
        {
            "type": "docker-run",
            "label": "docker-run: release",
            "dependsOn": [
                "docker-build"
            ],
            "platform": "node",
            "node": {
                "package": "${workspaceFolder}/fe/research-ui/package.json"
            }
        },
        {
            "type": "shell",
            "label": "compose-up-dev",
            "command": "docker-compose -f docker-compose.yml -f docker-compose.debug.yml up -d --build",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            }
        },
        {
            "type": "docker-build",
            "label": "docker-build",
            "platform": "node",
            "dockerBuild": {
                "dockerfile": "${workspaceFolder}/fe/research-ui/Dockerfile",
                "context": "${workspaceFolder}/fe/research-ui",
                "pull": true
            },
            "node": {
                "package": "${workspaceFolder}/fe/research-ui/package.json"
            }
        }
    ]
}